<template>
  <div class="topic_main">
 
    <el-form :inline="true" :rules="Rules" :model="SubmitForm">
    <el-input class="topic_head" v-model="SubmitForm.TopicTitle" placeholder="主题"></el-input>
      <el-form-item label="指明关注人">
        <el-select  @change="changeFocus($event)" v-model="SubmitForm.FocusUserId"  placeholder="指明关注人">
          <el-option v-for="item in optionsConcernPeople" :key="item.UserId" :label="item.UserName" :value="item.UserId">
          </el-option>
        </el-select>
      </el-form-item>
      <el-form-item label="帖子类型">
        <el-select v-model="SubmitForm.topicType" placeholder="帖子类型">
          <el-option v-for="item in optionsTopicType" :key="item.value" :label="item.label" :value="item.value">
          </el-option>
        </el-select>
      </el-form-item>
      <el-form-item label="">
        <el-checkbox @change="changeHot" v-model="checkedUrgency">紧急</el-checkbox>
      </el-form-item>
      <el-form-item label="限制分">
        <el-input v-model="SubmitForm.Score" type="number" ></el-input>
      </el-form-item>
      <el-input placeholder="请输入关键字" v-model="KeyName" style="width: 300px;"></el-input>
      <el-form-item prop="tel" maxlength=11 label="相关师傅手机号">
        <el-input v-model="SubmitForm.Phone" ></el-input>
      </el-form-item>
      <el-button type="primary" @click="checkPhone">检查手机号</el-button>
      <el-form-item label="关键词">
        <el-checkbox-group v-model="checkedKeyword" @change="changeKeyname">
          <el-checkbox v-for="keyWord in keyWords" :label="keyWord.KeyName" :key="keyWord.KeyName">{{keyWord.KeyName}}</el-checkbox>
        </el-checkbox-group>
      </el-form-item>
    </el-form>
    <!-- <div class="upload-container" id="upload-container" >
      <el-upload class="upload-demo" ref="upload" :header="headersData" :action="common.region" :on-success="handleSuccess" :on-error="handleError" :before-upload="beforeUpload" :on-change="handleChange" :on-remove="handleRemove" :file-list="fileList" :data="common"
        :http-request="handleSubmit" :auto-upload="false">
        <el-button size="small" type="primary">添加附件</el-button>
      </el-upload>
    </div> -->
     <el-select @change="changeSelect($event)" autocomplete="on" :collapse-tags="true" size="medium" style="width:300px;" v-model="SubmitForm.recentTopic" multiple placeholder="最近话题">
          <el-option v-for="item in optionsTopic" :key="item.TopicId" :label="item.TopicTitle" :value="item.TopicId">
          </el-option>
        </el-select>
    <el-button type="primary" @click="copyTopic">复制到编辑器</el-button>
    <div ref="editor" class="editClass" style="text-align:left;opacity:0.7;"></div>
    <button v-on:click="getContent">查看内容</button>
  </div>
</template>

<script>
  import {
    getAboutMessage,
    checkTel
  } from '@/api/table'
  import {
    getToken,
    setToken,
    removeToken
  } from '@/utils/auth'
   import {
    isvalidPhone
  } from "@/utils/validate";
  import E from 'wangeditor'
  import plugins from '@/components/Editor/plugins'
  import toolbar from '@/components/Editor/toolbar'
    var validPhone = (rule, value, callback) => {
    if (!value) {
      callback(new Error("请输入手机号码"));
    } else if (!isvalidPhone(value)) {
      callback(new Error("请输入正确的11位手机号码"));
    } else {
      callback();
    }
  };
  export default {
    data() {
      return {
        SubmitForm: {
          TopicTitle:'',//标题
          FocusUser: null, //关注人
          FocusUserId:'',
          topicType: null, //类型
          checkedKeyword: null, //关键字
          KeyName: null,
          IsHot:false,
          Score:null,//分
          Phone:null,//手机
          TopicTypeId:'',
          TopicType:'',
          TopicContent:'',//内容
        },
        checkedKeyword:[],
        KeyName:'',
        editor:'',
        editorContent:'',
        optionsConcernPeople: [], //关注人
        checkedUrgency:false,//紧急
        optionsTopic:[],//最近话题
        recentName:[],
        optionsTopicType: [{
          value: '1',
          label: '普通贴'
        }, {
          value: '2',
          label: '私人贴'
        }, {
          value: '3',
          label: '本公司公告贴'
        }, {
          value: '4',
          label: '功能贴'
        }, {
          value: '5',
          label: '程序更新'
        }, {
          value: '6',
          label: '疑难解答'
        }, {
          value: '7',
          label: '其他开发部公告贴'
        }, ], //类型
        keyWords: [], //关键字
        fileList: [],
        headersData: {
          Authorization: 'Bearer ' + getToken()
        },
        common: {},
        ossFileForm: {
          fileName: "",
          sourceKey: "",
          fileSize: ""
        },
        Rules:{
            Phone: [{
              required: true,
              validator: validPhone,
              message: "手机号输入有误",
              trigger: "change"
            },
            {
              min: 11,
              max: 11,
              message: "长度在11个字符",
              trigger: "blur"
            }
          ],
        }
      }
    },
    created() {
      // this.fetchData()
      this.getValue();
    },
    methods: {
      getContent: function() {
        // alert(this.editorContent)
        console.log(this.editorContent)
      },
      getValue() {
        getAboutMessage().then(res => {
          console.log(res)
          if (res.Success == true) {
            this.optionsConcernPeople = res.Data.FocusUser;
            this.optionsTopic = res.Data.TopicList;
            this.keyWords = res.Data.KeyNames;
          }
        })
      },
      checkPhone() {
        console.log(this.SubmitForm.tel)
        let checkForm ={};
        checkForm.Phone   = this.SubmitForm.tel
        checkTel(checkForm).then(res=>{
           console.log(res)
        })
      },
      copyTopic(){
            this.recentName = []
           this.optionsTopic.forEach((element,index) => {
                
             this.SubmitForm.recentTopic.forEach((element2,index2) => {
              
              
                 if(element.TopicId == element2){
                
                       this.recentName.push(element.TopicTitle)
                       this.editor.txt.append('<a href="/TopicSingle?topicId='+element.TopicId+'">'+element.TopicTitle+'</a>')
                        this.editorContent+='<a href="/TopicSingle?topicId='+element.TopicId+'">'+element.TopicTitle+'</a>'
                 }
             });
               
         }); 
     
          // this.editor.txt.append('<p>'+this.recentName+'</p>')

        // this.editorContent+='<p>'+this.recentName+'</p>'
       
     console.log(this.recentName)
      },
      // 最近帖子
      changeSelect(event){

      console.log(this.SubmitForm.recentTopic)


       
      },
      //关注人
      changeFocus(e){
        this.optionsConcernPeople.forEach(element => {
           if(element.UserId == e){
                this.SubmitForm.FocusUser = element.FocusUser;
           }
        });
      },
      //是否加急
      changeHot(e){
          //  console.log(e)
           if(e == true){
             this.checkedUrgency = true;
               this.SubmitForm.IsHot = 1;
           }else{
              this.checkedUrgency = false;
             this.SubmitForm.IsHot = 0;
           }
      },
      //关键字
      changeKeyname(e){
        // console.log(this.checkedKeyword)
      

        if(this.KeyName != ''|| this.KeyName != null){
            this.SubmitForm.KeyName = '';
            let str = this.checkedKeyword.join(',')
            this.SubmitForm.KeyName = this.KeyName+str;
        }else{
           let str = this.checkedKeyword.join(',')
           this.SubmitForm.KeyName  = str;
        }
       
        console.log(this.SubmitForm.KeyName)
          //  console.log(e)
      },
      beforeUpload2(file) {
        // console.log(file);
        // this.fullscreenLoading = true;
        if (file.type.indexOf("image") != -1) {
          {
            this.$message.error('只能选择文件类型！');
            // this.fullscreenLoading = false;
            return false;
          }
        }
      },
      //文件
      handleRemove() {
        //   this.handleClearUser()
      },
      // 上传之前的回调
      beforeUpload(file) {
        //  this.getOssMsg();
        // this.TimeChange()
        let changeForm = {};
        changeForm.CompanyId = this.selectList;
        this.common.name = file.name;
        this.common.key = this.common.dir + this.userId + this.TimeChange() + file.name;
        this.ossFileForm.fileName = file.name;
        this.ossFileForm.sourceKey = this.common.key;
        // this.ossFileForm.fileSize = Math.round(file.size / 1024);
        this.ossFileForm.fileSize = file.size;
        this.ossFileForm.companyId = this.selectList;
        let str = "";
        this.checkUser.map(el => {
          str += el + "|";
        });
        str = str.substring(0, str.length - 1);
        this.ossFileForm.touser = str;
      },
      handleChange(file, fileList) {
        let name = this._splitExtension(file.name)
        if (name == 'pla' || name == 'prj') {
          // this.getOssMsg();//获取必要参数地址
          getOss().then(res => {
            if (res.Success) {
              let r = res.data;
              this.common.policy = res.data.policy;
              this.common.OSSAccessKeyId = res.data.accessid;
              this.common.success_action_status = "200";
              this.common.signature = res.data.signature;
              this.common.region = res.data.oshost;
              this.common.dir = res.data.dir;
            } else {
              this.$message({
                message: res.ErrMes,
                type: "error"
              })
              this.fileList = [];
            }
          });
        } else {
          this.$message({
            message: "只能上传pla或者prj文件！",
            type: "warning"
          });
          this.fileList = [];
        }
        if (fileList.length >= 2) {
          fileList.splice(0, fileList.length - 1);
        } else {
          this.isHaveFile = true;
        }
      },
      handleSubmit(row) {
        let formData = new FormData()
        let config = {
          headers: {
            'Content-Type': 'multipart/form-data'
          }
        }
        formData.append('policy', this.common.policy)
        formData.append('OSSAccessKeyId', this.common.OSSAccessKeyId)
        formData.append('success_action_status', this.common.success_action_status)
        formData.append('signature', this.common.signature)
        formData.append('region', this.common.region)
        formData.append('dir', this.common.dir)
        formData.append('name', this.common.name)
        formData.append('key', this.common.key)
        formData.append('file', row.file)
        axios.post(this.common.region, formData, config).then(res => {
          this.handleSuccess()
        }).catch(res => {
          console.log(res);
        })
      },
      handleError(err, file, fileList) {
        if (err) {
          this.$message({
            message: "上传文件失败",
            type: "error"
          });
        }
      },
    },
    mounted() {
      this.editor = new E(this.$refs.editor)
      this.editor.customConfig.onchange = (html) => {
        this.editorContent = html
      }
      this.editor.customConfig.uploadImgShowBase64 = true
      this.editor.create()
    },
  }
</script>

<style rel="stylesheet/scss" lang="scss" scoped>
  .topic_main {
    width: 1200px;
    margin: 30px auto;
  }
  .topic_head {
    margin-bottom: 20px;
  }
  .upload-container /deep/ .el-upload {
    width: 10px !important;
  }
  .upload-container {
    border: 1px solid #e0e0e0;
    padding: 5px;
    margin: 5px 0px;
    background: #eef1f6; // height: 60px;
    width: 100%;
    display: flex;
    justify-content: start; // align-items: top;
    .editor-slide-upload {
      display: flex;
      align-content: center; // margin-bottom: 30px; // display: inline-block;
      width: 100%; // margin-right: 20px;
    }
    .editor-slide-upload1 {
      // margin-bottom: 20px; // padding: 5px;
      // display: inline-block;
      // width: 100%;
      // margin-right: 20px;
    }
    .editor-slide-upload /deep/ .el-upload-list {
      display: flex;
      align-items: start;
      display: -ms-inline-flexbox;
      border: 0px solid #e0e0e0; //  padding: 0 5px;
      margin-left: 5px; //  margin: 5px 0px; 
      background: #eef1f6;
      overflow-x: auto;
      max-width: 87%; // height: 52px;
      .el-upload-list__item-name {
        color: #606266;
        display: block;
        margin-right: 40px;
        margin-left: 5px; // overflow: hidden;
        padding-left: 4px;
        margin-top: -2px;
        text-overflow: ellipsis;
        -webkit-transition: color .3s;
        transition: color .3s;
        /* white-space: nowrap; */
        /* display: inline-block; */
        border: 1px solid #20a0ff;
        border-radius: 5px;
        /* margin: 5px 10px; */
        /* text-align: center; */
        padding: 0 5px;
        /* padding-right: 10px; */
      }
      a {
        display: inline-block;
        border: 1px solid #20a0ff;
        background-color: rgba(32, 160, 255, 0.1);
        border-color: rgba(32, 160, 255, 0.2);
        border-radius: 5px;
        margin: 5px 10px;
        text-align: center;
        padding: 5px 0;
        padding-right: 10px;
      }
    }
    .editor-slide-upload /deep/ .el-upload-list li {
      // border: 1px solid red;
    }
  }
  .editor-slide-upload /deep/ .el-upload-list__item:first-child {
    margin-top: 5px;
  }
   ::-webkit-scrollbar {
    /*滚动条整体样式*/
    width: 4px;
    /*高宽分别对应横竖滚动条的尺寸*/
    height: 4px;
  }
   ::-webkit-scrollbar-thumb {
    /*滚动条里面小方块*/
    border-radius: 5px;
    -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
    background: rgba(0, 0, 0, 0.2);
  }
   ::-webkit-scrollbar-track {
    /*滚动条里面轨道*/
    -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
    border-radius: 0;
    background: rgba(0, 0, 0, 0.1);
  }
</style>

