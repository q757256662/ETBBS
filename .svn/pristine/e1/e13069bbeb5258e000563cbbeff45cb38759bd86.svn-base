<template>
  <el-card class="dashboard-container">
    <!-- addTag 自定义标签 -->
    <h3 style="text-align:center;margin-bottom:20px;font-weight:600">标签</h3>
    <div class="form_box">
<el-tag
  :key="tag.Id"
  v-for="tag in dynamicTags"
  :disable-transitions="false"
  >
   <span  @click="handleEdit(tag)">{{tag.name}}</span>
</el-tag>
<el-input
  class="input-new-tag"
  v-if="inputVisible"
  v-model="inputValue"
  ref="saveTagInput"
  size="small"
  @keyup.enter.native="handleInputConfirm"
  @blur="handleInputConfirm"
>
</el-input>
<el-button v-else class="button-new-tag" size="small" @click="showInput">+ 新增标签</el-button>

<!-- <el-input
  class="input-new-tag"
  v-if="editInputVisible"
  v-model="newInputValue"
  placeholder="请输入新的标签名"
  ref="editTagInput"
  size="small"
  @keyup.enter.native="handleInputEdit"
  @blur="handleInputEdit"
>
</el-input> -->
    </div>
<!-- 修改tag -->
<el-dialog title="修改" :visible.sync="editInputVisible">
  <el-form>
    <el-form-item label="标签名称:" :label-width="formLabelWidth">
      <el-input placeholder="请输入新的标签名" v-model="newInputValue" autocomplete="off"></el-input>
    </el-form-item>

  </el-form>
  <div slot="footer" class="dialog-footer">
    <el-button @click="editInputVisible = false">取 消</el-button>
    <el-button type="primary" @click="handleInputEdit">确 定</el-button>
  </div>
</el-dialog>

  </el-card>
</template>

<script>
import { mapGetters, mapState } from "vuex";
import { getTag, addTag ,editTag} from "@/api/addtag.js";

export default {
  name: "dashboard",
  computed: {
    ...mapGetters(["name", "roles"]),
    ...mapState({
      user: state => state.user
    })
  },
  created() {
    this.initData();
  },
  data() {

    return {
      userMessage: {}, //用户信息
        dynamicTags: [],
        inputVisible: false,
        inputValue: '',
        newInputValue:'',
        editInputVisible:false,
        tagId:'',
        formLabelWidth: '80px'

    };
  },
  methods: {

    /**初始化数据 */
    initData() {
    //   console.log(this.user);
       getTag().then(res=>{
        //    console.log(res);
           if(res.Success){
               this.dynamicTags =res.Data.Rows
           }
          
       })
    },

    handleEdit(tag){
        console.log(11111)
        this.tagId = tag.Id;
        this.editInputVisible =true;
    },
    //删除标签
    handleClose(tag) {
        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);
      },
        //显示标签输入框
      showInput() {
        this.inputVisible = true;
        this.$nextTick(_ => {
          this.$refs.saveTagInput.$refs.input.focus();
        });
      },   
    //确定添加标签
    handleInputConfirm() {
        let inputValue = this.inputValue;
        let form ={};
        form.name   = inputValue;
        if (inputValue) {
       addTag(form).then(res=>{
          if(res.Success){
            this.initData();
          }
           else{
               this.$message.warning(res.ErrMes);
          }
       })
        }
        this.inputVisible = false;
        this.inputValue = '';
      },
      handleInputEdit(){
        let inputValue = this.newInputValue;
        let form ={};
        form.name   = inputValue;
        form.Id =this.tagId ; 
        form.UserId  = this.user.userinfo.id;
        if (inputValue) {
        //   this.dynamicTags.push(inputValue);
       editTag(form).then(res=>{
          if(res.Success){
           this.initData();
           this.newInputValue  = '';
           this.editInputVisible = false;
          } else{
               this.$message.warning(res.ErrMes);
          }
       })
        }
     

      }
    
  }
};
</script>

<style rel="stylesheet/scss" lang="scss" scoped>
.dashboard {
  &-container {
    // width: 500px;
    // margin-left:400px;
    // margin: 50px auto 0px;
    // background:#efefef;
    // text-align: center;
  }
  &-text {
    font-size: 30px;
    line-height: 46px;
  }
}
.form_box {
  // border:1px solid red;
  width: 400px;
  margin:0 auto;
  height: 500px;
  // padding:50px 20px;
  // background:#eee;
}
  .el-tag + .el-tag {
    margin-left: 10px;
  }
  .button-new-tag {
    margin-left: 10px;
    height: 32px;
    line-height: 30px;
    padding-top: 0;
    padding-bottom: 0;
  }
  .input-new-tag {
    width: 90px;
    margin-left: 10px;
    vertical-align: bottom;
  }
</style>
