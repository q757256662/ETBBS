<template>
    <!-- 我的收藏 mycollections -->
    <div class="collect">
        <el-table ref="multipleTable" :data="tableData" tooltip-effect="dark" border="true" style="width: 100%" @selection-change="handleSelectionChange">
            <el-table-column type="selection" align="center" width="55">
            </el-table-column>
            <el-table-column prop="TopicTitle" align="center" label="标题" show-overflow-tooltip>
            </el-table-column>
            <el-table-column prop="ReplyName" align="center" width="200px;" label="回复人">
            </el-table-column>
            <el-table-column align="center"  label="日期">
                <template slot-scope="scope">{{ scope.row.CollectionTime }}
</template>
    </el-table-column>
      <el-table-column align="center" width="200px;" label="操作">
<template slot-scope="scope">
    <!-- <el-button size="mini" @click="handleEdit(scope.$index, scope.row)">
        编辑</el-button> -->
    <el-button size="mini" type="danger" @click="handleDelete(scope.$index, scope.row)">删除</el-button>
</template>
    </el-table-column>
  </el-table>
   <el-pagination class="page" layout="total,sizes,prev, pager, next" :current-page="queryList.pageIndex" @size-change="handleSizeChange" @current-change="handlePageChange" :page-sizes="[10, 20, 30, 50]" :total="total">
    </el-pagination>
    </div>
 
</template>
<script>
    import {
        getList
    } from '@/api/mycollections.js';
    export default {
        data() {
            return {
                tableData: [], //列表
                total: 0, //总条数
                queryList: {
                    limit: 10, //当前页数
                    page: 1, //一页显示的条数
                }
            }
        },
        created() {
            console.log(this.queryList)
            this.getMyCollect();
        },
        methods: {
            getMyCollect() {
                getList(this.queryList).then(res => {
                    console.log(res)
                    if (res.Success == true) {
                        this.tableData = res.Data.Rows;
                        this.total = res.Data.Total
                    }
                })
            },
            handleEdit(index, row) {
                console.log(index, row);
            },
            handleDelete(index, row) {
                console.log(index, row);
            },
            handlePageChange(page) {
                this.queryList.pageIndex = page;
                this.getMyCollect();
            },
            handleSizeChange(val) {
                this.queryList.pageSize = val;
                this.queryList.pageIndex = 1;
                this.getMyCollect();
            },
        }
    }
</script>
<style scoped>
    .collect {
        padding: 35px;
    }
    .page {
        text-align: center;
        margin-top: 20px;
    }
</style>
