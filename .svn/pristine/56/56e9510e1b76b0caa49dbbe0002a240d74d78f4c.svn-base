<template>
  <div class="mytask-container">
    <!-- mytask 我的话题 -->
    <el-tabs type="border-card" v-model="CurrentTab">
      <el-tab-pane label="新话题" name="NewTopic">
        <div v-loading="loadingState">
          <router-link
            :class="{'board-item-box':true,'border-striped':index%2==0}"
            :to="'/TopicSingle?topicId='+item.Id"
            v-for="(item,index) in newTopicList"
            :key="item.Id"
          >
            <complexItem
              :item="item"
              v-if="CurrentTab=='NewTopic'"
              :flashTopic="getList"
              :background="index"
              :key="item.Id"
            ></complexItem>
          </router-link>
          <noItem v-if="newTopicList.length==0"></noItem>
        </div>
      </el-tab-pane>
      <el-tab-pane label="待解决" name="NeedSolved">
        <div v-loading="loadingState">
          <router-link
            :class="{'board-item-box':true,'border-striped':index%2==0}"
            :to="'/TopicSingle?topicId='+item.Id"
            v-for="(item,index) in newTopicList"
            :key="item.id"
          >
            <complexItem
              :item="item"
              v-if="CurrentTab=='NeedSolved'"
              :flashTopic="getList"
              :background="index"
              :key="item.Id"
            ></complexItem>
          </router-link>
          <noItem v-if="newTopicList.length==0"></noItem>
        </div>
      </el-tab-pane>
      <el-tab-pane label="旧话题" name="OldTopic">
        <div v-loading="loadingState">
          <router-link
            :class="{'board-item-box':true,'border-striped':index%2==0}"
            :to="'/TopicSingle?topicId='+item.Id"
            v-for="(item,index) in newTopicList"
            :key="item.Id"
          >
            <complexItem
              :item="item"
              :flashTopic="getList"
              v-if="CurrentTab=='OldTopic'"
              :background="index"
              :key="item.Id"
            ></complexItem>
          </router-link>
          <noItem v-if="newTopicList.length==0"></noItem>
        </div>
      </el-tab-pane>
      <el-tab-pane label="草稿帖" name="draft">
        <div v-loading="loadingState">
          <router-link
            :class="{'board-item-box':true,'border-striped':index%2==0}"
            :to="'/TopicSingle?topicId='+item.Id"
            v-for="(item,index) in newTopicList"
            :key="item.Id"
          >
            <complexItem
              :item="item"
              :flashTopic="getDraftTopic"
              v-if="CurrentTab=='draft'"
              :background="index"
              :key="item.Id"
            ></complexItem>
          </router-link>
          <!-- <complexItem :item="item" :flashTopic="getList" v-if="CurrentTab=='draft'"></complexItem> -->
          <noItem v-if="newTopicList.length==0"></noItem>
        </div>
      </el-tab-pane>
    </el-tabs>

    <!-- <el-pagination
      v-if="CurrentTab!='draft'"
      class="page"
      layout="total,sizes,prev, pager, next"
      :current-page="queryList.pageIndex"
      :page-size="queryList.pageSize"
      @size-change="handleSizeChange"
      @current-change="handlePageChange"
      :page-sizes="[10, 20, 30, 50]"
      :total="total"
    ></el-pagination> -->
    <Pagination :total="total" :listQuery="queryList" @PageChange="getList" v-if="CurrentTab!='draft'" class="page">

    </Pagination>
  </div>
</template>
<script>
import { GetNewTopic, draftTopic } from "@/api/topic.js";
import { formatTime, delHtmlTag } from "@/utils/index";
import complexItem from "@/components/TopicItem/complexItem";
import noItem from "@/components/NoItem";
import Cookies from "js-cookie"; //获取当前帖子停留状态
import Pagination from '@/components/Pagination'
export default {
  components: {
    complexItem: complexItem,
    noItem,
    Pagination
  },
  name: "mytask",
  data() {
    return {
      //查询条件
      queryList: {
        pageIndex: 1, //当前页数
        pageSize: 50, //一页显示的条数
        state: 3,
        trackId: this.$store.state.user.userinfo.id //搜索ID
      },
      CurrentTab: "", //当前tab位置
      newTopicList: [], //新话题的列表
      total: 0, //总条数
      loadingState: false
    };
  },
  methods: {
    handlePageChange(page) {
      Cookies.set("CurrentPage", page);
      this.queryList.pageIndex = page;

      this.getList();
    },
    handleSizeChange(val) {
      this.queryList.pageSize = val;
      this.queryList.pageIndex = 1;
      this.getList();
    },
    //获取列表
    getList() {
      this.loadingState = true;
      GetNewTopic(this.queryList).then(res => {
        this.loadingState = false;
        if (res.Success) {
          this.newTopicList = res.Data.Rows;
          this.total = res.Data.Total;
        }
      });
    },
    /**获取草稿贴 */
    getDraftTopic() {
      this.loadingState = true;
      draftTopic(this.queryList).then(res => {
        this.loadingState = false;
        if (res.Success) {
          this.newTopicList = res.Data.Rows;
          this.total = res.Data.Total;
        }
      });
    },
    ResetQueryList(state) {
      this.queryList.pageIndex = 1;
      this.queryList.state = state;
      this.newTopicList.splice(0, this.newTopicList.length - 1);
      return new Promise((resolve, reject) => {
        if (state != null) {
          resolve();
        } else {
          reject();
        }
      });
    }
  },
  created() {
    if (Cookies.get("currentState") == undefined) {
      this.CurrentTab = "NewTopic";
    } else {
      this.CurrentTab = Cookies.get("currentState");
    }
    // this.getList();
  },
  watch: {
    CurrentTab(newValue, oldValue) {
      let state = null;
      // this.$store.commit('currentState',newValue)
      Cookies.set("currentState", newValue);
      if (newValue == "NewTopic") {
        state = 1;
      } else if (newValue == "NeedSolved") {
        state = 2;
      } else if (newValue == "OldTopic") {
        state = 3;
      } else if (newValue == "draft") {
        state = 4;
      } else {
        state = null;
      }
      this.newTopicList = [];
      if (state < 4) {
        this.ResetQueryList(state)
          .then(res => {
            this.getList();
          })
          .catch(err => {
            if (this.queryList.state == null) {
              this.$message({
                message: "状态错误",
                type: "warning"
              });
              return false;
            }
          });
      } else if (state == 4) {
        this.getDraftTopic();
      }
    }
  }
};
</script>


<style rel="stylesheet/scss" lang="scss" scoped>
.mytask {
  &-text {
    font-size: 30px;
    line-height: 46px;
  }
}
.board-item-box {
  // border:1px solid red;
  display: block;
  width: 100%;
  height: 60px;
  border-radius: 10px;
  padding: 5px;
  box-sizing: border-box;
}
.border-striped {
  background: #ededed;
}
.board-item-box:hover {
  background: #e5effa;
}
.board-item {
  display: flex;
  height: 100%;
  justify-content: space-between;
  align-items: center;
}
</style>
